@model IEnumerable<Actor>

@{
    ViewData["Title"] = "List Of Actors";
}

<div class="row">
    <div class="col-md-8 offset-md-2">
        <table class="table">
            <thead>
                <tr class="text-center">
                    <th>
                        @Html.DisplayNameFor(model => model.ProfilePictureURL)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FullName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Bio)
                    </th>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <th>Actions</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    <td class="align-middle">
                        <img class="rounded-circle" src="@item.ProfilePictureURL" alt="@item.FullName" style="max-width:150px" />
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td class="align-middle">
                        @Html.DisplayFor(modelItem => item.Bio)
                    </td>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <td class="align-middle">
                            <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i>Edit</a> |
                            <a class="btn btn-outline-info" asp-action="Details" asp-route-id="@item.Id"><i class="bi bi-eye"></i>Details</a> |
                            <a class="btn btn-danger text-white" asp-action="Delete" asp-route-id="@item.Id"><i class="bi bi-trash"></i>Delete</a>
                        </td>
                    }
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@await Html.PartialAsync("_CreateItem", "Actors");

@section Scripts {
    <script>
        $(window).scroll(() => {
            //Distance from top fo document to top of footer
            topOfFooter = $('#footer').position().top;
            // Distance user has scrolled from top + windows inner height
            scrollDistanceFromTopOfDoc = $(document).scrollTop() + window.innerHeight;
            // Difference between the two.
            scrollDistanceFromTopOfFooter = scrollDistanceFromTopOfDoc - topOfFooter;
            // If user has scrolled further than footer,
            if (scrollDistanceFromTopOfDoc > topOfFooter) {
                // add margin-bottom so button stays above footer.
                $('#btn-addnew-float').css('margin-bottom', 0 + scrollDistanceFromTopOfFooter);
            } else {
                // remove margin-bottom so button goes back to the bottom of the page
                $('#btn-addnew-float').css('margin-bottom', 0);
            }
        });
    </script>
}